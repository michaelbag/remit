# Generated by Django 5.0.4 on 2024-05-12 07:37

import datetime
import django.db.models.deletion
import macaddress.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EquipmentType',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, help_text='GUID', primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=9)),
                ('name', models.CharField(blank=True, max_length=50)),
                ('virtual', models.BooleanField(default=False)),
                ('has_interfaces', models.BooleanField(default=False)),
                ('delete_mark', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Equipment type',
                'ordering': ['name', 'code'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, help_text='GUID', primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=9)),
                ('name', models.CharField(blank=True, max_length=150)),
                ('archive', models.BooleanField(default=False)),
                ('delete_mark', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Supplier',
                'ordering': ['name', 'code'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentModel',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, help_text='GUID', primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=9)),
                ('name', models.CharField(blank=True, max_length=50)),
                ('title', models.CharField(blank=True, help_text='Full title for printing', max_length=150)),
                ('model_number', models.CharField(blank=True, max_length=50)),
                ('info_page_url', models.URLField(blank=True)),
                ('delete_mark', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True)),
                ('equipment_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='models', to='equipment.equipmenttype')),
                ('supplier', models.ForeignKey(blank=True, limit_choices_to={'archive': False, 'delete_mark': False}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='models', to='equipment.supplier')),
            ],
            options={
                'verbose_name': 'Equipment model',
                'ordering': ['name', 'code'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, help_text='GUID', primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=9)),
                ('name', models.CharField(blank=True, max_length=50)),
                ('title', models.CharField(blank=True, help_text='Full title for printing', max_length=150)),
                ('delete_mark', models.BooleanField(default=False)),
                ('is_group', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, upload_to='equipment/')),
                ('serial_number', models.CharField(blank=True, max_length=150)),
                ('virtual', models.BooleanField(default=False)),
                ('has_interfaces', models.BooleanField(default=False)),
                ('start_date', models.DateField(default=datetime.date.today, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('archive', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('hostname', models.CharField(blank=True, max_length=50)),
                ('parent', models.ForeignKey(blank=True, limit_choices_to={'delete_mark': False, 'is_group': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='equipment.equipment')),
                ('model', models.ForeignKey(blank=True, limit_choices_to={'delete_mark': False}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipments', to='equipment.equipmentmodel')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipments', to='equipment.equipmenttype')),
            ],
            options={
                'verbose_name': 'Equipment',
                'ordering': ['title', 'name', 'code'],
            },
        ),
        migrations.CreateModel(
            name='Interface',
            fields=[
                ('guid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=150)),
                ('name', models.CharField(blank=True, max_length=64)),
                ('code', models.CharField(blank=True, max_length=9)),
                ('delete_mark', models.BooleanField(default=False)),
                ('mac', macaddress.fields.MACAddressField(integer=True)),
                ('archive', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True)),
                ('owner', models.ForeignKey(limit_choices_to={'has_interfaces': True, 'is_group': False}, on_delete=django.db.models.deletion.CASCADE, related_name='interfaces', to='equipment.equipment')),
            ],
            options={
                'verbose_name': 'Interface',
                'ordering': ['title', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='equipment.service')),
            ],
            options={
                'verbose_name': 'Service',
                'abstract': False,
            },
        ),
    ]
